version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: industry_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: prevailing_trend
      MYSQL_USER: industry_user
      MYSQL_PASSWORD: industry_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - industry_network

  # Redis缓存服务
  redis:
    image: redis:6-alpine
    container_name: industry_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - industry_network

  # 万得行业分类API服务
  industry_api:
    build: .
    container_name: industry_api
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=prevailing_trend
      - DB_USER=industry_user
      - DB_PASSWORD=industry_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - industry_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: industry_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - industry_api
    networks:
      - industry_network
    restart: unless-stopped

  # 监控服务
  monitoring:
    image: prom/prometheus:latest
    container_name: industry_monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - industry_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  industry_network:
    driver: bridge 