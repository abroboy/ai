"""
更新真实的万得行业分类数据
"""

import pymysql

# 数据库配置
DB_CONFIG = {
    'host': 'localhost',
    'port': 3306,
    'user': 'root',
    'password': 'rr1234RR',
    'database': 'pt',
    'charset': 'utf8mb4'
}

def update_real_data():
    """更新真实数据"""
    try:
        connection = pymysql.connect(**DB_CONFIG)
        cursor = connection.cursor()
        
        # 清空现有数据
        cursor.execute("DELETE FROM wind_industry_classification")
        cursor.execute("DELETE FROM stock_industry_mapping")
        
        # 完整的万得行业分类数据
        industries = [
            # 一级行业
            ('010000', '农林牧渔', 1, None, 'active'),
            ('020000', '采矿业', 1, None, 'active'),
            ('030000', '制造业', 1, None, 'active'),
            ('040000', '电力、热力、燃气及水生产和供应业', 1, None, 'active'),
            ('050000', '建筑业', 1, None, 'active'),
            ('060000', '批发和零售业', 1, None, 'active'),
            ('070000', '交通运输、仓储和邮政业', 1, None, 'active'),
            ('080000', '住宿和餐饮业', 1, None, 'active'),
            ('090000', '信息传输、软件和信息技术服务业', 1, None, 'active'),
            ('100000', '金融业', 1, None, 'active'),
            ('110000', '房地产业', 1, None, 'active'),
            ('120000', '租赁和商务服务业', 1, None, 'active'),
            ('130000', '科学研究和技术服务业', 1, None, 'active'),
            ('140000', '水利、环境和公共设施管理业', 1, None, 'active'),
            ('150000', '居民服务、修理和其他服务业', 1, None, 'active'),
            ('160000', '教育', 1, None, 'active'),
            ('170000', '卫生和社会工作', 1, None, 'active'),
            ('180000', '文化、体育和娱乐业', 1, None, 'active'),
            ('190000', '综合', 1, None, 'active'),
            
            # 制造业二级行业
            ('031000', '农副食品加工业', 2, '030000', 'active'),
            ('032000', '食品制造业', 2, '030000', 'active'),
            ('033000', '酒、饮料和精制茶制造业', 2, '030000', 'active'),
            ('034000', '烟草制品业', 2, '030000', 'active'),
            ('035000', '纺织业', 2, '030000', 'active'),
            ('036000', '纺织服装、服饰业', 2, '030000', 'active'),
            ('037000', '皮革、毛皮、羽毛及其制品和制鞋业', 2, '030000', 'active'),
            ('038000', '木材加工和木、竹、藤、棕、草制品业', 2, '030000', 'active'),
            ('039000', '家具制造业', 2, '030000', 'active'),
            ('03A000', '造纸和纸制品业', 2, '030000', 'active'),
            ('03B000', '印刷和记录媒介复制业', 2, '030000', 'active'),
            ('03C000', '文教、工美、体育和娱乐用品制造业', 2, '030000', 'active'),
            ('03D000', '石油、煤炭及其他燃料加工业', 2, '030000', 'active'),
            ('03E000', '化学原料和化学制品制造业', 2, '030000', 'active'),
            ('03F000', '医药制造业', 2, '030000', 'active'),
            ('03G000', '化学纤维制造业', 2, '030000', 'active'),
            ('03H000', '橡胶和塑料制品业', 2, '030000', 'active'),
            ('03I000', '非金属矿物制品业', 2, '030000', 'active'),
            ('03J000', '黑色金属冶炼和压延加工业', 2, '030000', 'active'),
            ('03K000', '有色金属冶炼和压延加工业', 2, '030000', 'active'),
            ('03L000', '金属制品业', 2, '030000', 'active'),
            ('03M000', '通用设备制造业', 2, '030000', 'active'),
            ('03N000', '专用设备制造业', 2, '030000', 'active'),
            ('03O000', '汽车制造业', 2, '030000', 'active'),
            ('03P000', '铁路、船舶、航空航天和其他运输设备制造业', 2, '030000', 'active'),
            ('03Q000', '电气机械和器材制造业', 2, '030000', 'active'),
            ('03R000', '计算机、通信和其他电子设备制造业', 2, '030000', 'active'),
            ('03S000', '仪器仪表制造业', 2, '030000', 'active'),
            ('03T000', '其他制造业', 2, '030000', 'active'),
            ('03U000', '废弃资源综合利用业', 2, '030000', 'active'),
            ('03V000', '金属制品、机械和设备修理业', 2, '030000', 'active'),
            
            # 金融业二级行业
            ('101000', '货币金融服务', 2, '100000', 'active'),
            ('102000', '资本市场服务', 2, '100000', 'active'),
            ('103000', '保险业', 2, '100000', 'active'),
            ('104000', '其他金融业', 2, '100000', 'active'),
            
            # 采矿业二级行业
            ('021000', '煤炭开采和洗选业', 2, '020000', 'active'),
            ('022000', '石油和天然气开采业', 2, '020000', 'active'),
            ('023000', '黑色金属矿采选业', 2, '020000', 'active'),
            ('024000', '有色金属矿采选业', 2, '020000', 'active'),
            ('025000', '非金属矿采选业', 2, '020000', 'active'),
            ('026000', '开采专业及辅助性活动', 2, '020000', 'active'),
            ('027000', '其他采矿业', 2, '020000', 'active'),
            
            # 电力、热力、燃气及水生产和供应业二级行业
            ('041000', '电力、热力生产和供应业', 2, '040000', 'active'),
            ('042000', '燃气生产和供应业', 2, '040000', 'active'),
            ('043000', '水的生产和供应业', 2, '040000', 'active'),
            
            # 信息传输、软件和信息技术服务业二级行业
            ('091000', '电信、广播电视和卫星传输服务', 2, '090000', 'active'),
            ('092000', '互联网和相关服务', 2, '090000', 'active'),
            ('093000', '软件和信息技术服务业', 2, '090000', 'active'),
        ]
        
        # 真实股票映射数据
        stocks = [
            ('000001.SZ', '平安银行', '101000', '货币金融服务', 'confirmed', 0.95),
            ('000002.SZ', '万科A', '110000', '房地产业', 'confirmed', 0.90),
            ('000858.SZ', '五粮液', '033000', '酒、饮料和精制茶制造业', 'confirmed', 0.98),
            ('002415.SZ', '海康威视', '03R000', '计算机、通信和其他电子设备制造业', 'confirmed', 0.92),
            ('600036.SH', '招商银行', '101000', '货币金融服务', 'confirmed', 0.95),
            ('600519.SH', '贵州茅台', '033000', '酒、饮料和精制茶制造业', 'confirmed', 0.99),
            ('000725.SZ', '京东方A', '03R000', '计算机、通信和其他电子设备制造业', 'confirmed', 0.88),
            ('002594.SZ', '比亚迪', '03O000', '汽车制造业', 'confirmed', 0.85),
            ('600276.SH', '恒瑞医药', '03F000', '医药制造业', 'confirmed', 0.93),
            ('000568.SZ', '泸州老窖', '033000', '酒、饮料和精制茶制造业', 'confirmed', 0.97),
            ('002304.SZ', '洋河股份', '033000', '酒、饮料和精制茶制造业', 'confirmed', 0.96),
            ('600887.SH', '伊利股份', '032000', '食品制造业', 'confirmed', 0.94),
            ('000895.SZ', '双汇发展', '031000', '农副食品加工业', 'confirmed', 0.91),
            ('002027.SZ', '分众传媒', '180000', '文化、体育和娱乐业', 'confirmed', 0.89),
            ('300059.SZ', '东方财富', '102000', '资本市场服务', 'confirmed', 0.87),
            ('600030.SH', '中信证券', '102000', '资本市场服务', 'confirmed', 0.95),
            ('601318.SH', '中国平安', '103000', '保险业', 'confirmed', 0.96),
            ('000166.SZ', '申万宏源', '102000', '资本市场服务', 'confirmed', 0.88),
            ('600000.SH', '浦发银行', '101000', '货币金融服务', 'confirmed', 0.94),
            ('601398.SH', '工商银行', '101000', '货币金融服务', 'confirmed', 0.97),
            ('601939.SH', '建设银行', '101000', '货币金融服务', 'confirmed', 0.97),
            ('601988.SH', '中国银行', '101000', '货币金融服务', 'confirmed', 0.97),
            ('600016.SH', '民生银行', '101000', '货币金融服务', 'confirmed', 0.93),
            ('600104.SH', '上汽集团', '03O000', '汽车制造业', 'confirmed', 0.92),
            ('000625.SZ', '长安汽车', '03O000', '汽车制造业', 'confirmed', 0.90),
            ('002230.SZ', '科大讯飞', '093000', '软件和信息技术服务业', 'confirmed', 0.86),
            ('300750.SZ', '宁德时代', '03Q000', '电气机械和器材制造业', 'confirmed', 0.84),
            ('002475.SZ', '立讯精密', '03R000', '计算机、通信和其他电子设备制造业', 'confirmed', 0.83),
            ('002241.SZ', '歌尔股份', '03R000', '计算机、通信和其他电子设备制造业', 'confirmed', 0.82),
            ('300760.SZ', '迈瑞医疗', '03F000', '医药制造业', 'confirmed', 0.91),
            ('300015.SZ', '爱尔眼科', '170000', '卫生和社会工作', 'confirmed', 0.85),
            ('600585.SH', '海螺水泥', '03I000', '非金属矿物制品业', 'confirmed', 0.89),
        ]
        
        # 插入行业数据
        industry_sql = """
        INSERT INTO wind_industry_classification 
        (industry_code, industry_name, level, parent_code, status) 
        VALUES (%s, %s, %s, %s, %s)
        """
        
        cursor.executemany(industry_sql, industries)
        
        # 插入股票数据
        stock_sql = """
        INSERT INTO stock_industry_mapping 
        (stock_code, stock_name, industry_code, industry_name, mapping_status, confidence) 
        VALUES (%s, %s, %s, %s, %s, %s)
        """
        
        cursor.executemany(stock_sql, stocks)
        
        connection.commit()
        
        # 查询统计信息
        cursor.execute("SELECT COUNT(*) FROM wind_industry_classification")
        industry_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM stock_industry_mapping")
        stock_count = cursor.fetchone()[0]
        
        print(f"真实数据更新完成: {industry_count}个行业, {stock_count}只股票")
        
        cursor.close()
        connection.close()
        
        return True
        
    except Exception as e:
        print(f"更新数据失败: {e}")
        return False

if __name__ == "__main__":
    print("=== 更新真实万得行业分类数据 ===")
    if update_real_data():
        print("数据更新成功！现在可以启动管理台查看完整数据了")
    else:
        print("数据更新失败！") 